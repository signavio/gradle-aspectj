buildscript {
    repositories {
        jcenter()
    }
    dependencies {
        classpath "org.jfrog.buildinfo:build-info-extractor-gradle:4+"
    }
}

apply plugin: 'groovy'
apply plugin: 'maven-publish'
apply plugin: 'maven'
apply plugin: 'java-gradle-plugin'
apply plugin: 'com.jfrog.artifactory'

group = 'net.uberfoo.gradle'
version = '2.6-SNAPSHOT'

repositories {
    jcenter()
}

dependencies {
    implementation localGroovy()
    implementation gradleApi()
    testImplementation gradleTestKit()
    testImplementation 'junit:junit:4.12'
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    //archives jar
    archives sourcesJar
    archives javadocJar
}

wrapper {
    gradleVersion = '6.0'
    distributionType = 'ALL'
}

/* Publishing to Signavio's artifactory */

repositories {
    // get values from gradle.properties
    String artifactoryUrl = getProperty("artifactoryContextUrl")
    String artifactoryUser = getProperty("artifactoryUser")
    String artifactoryPassword = getProperty("artifactoryPassword")

    maven {
        name 'signavio-jfrog-plugins-release-local'
        url "${artifactoryUrl}/plugins-release-local"
        credentials {
            username = artifactoryUser
            password = artifactoryPassword
        }
    }
    maven {
        name 'signavio-jfrog-plugins-snapshot-local'
        url "${artifactoryUrl}/plugins-snapshot-local"
        credentials {
            username = artifactoryUser
            password = artifactoryPassword
        }
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            artifact javadocJar
        }
    }
}

def publishRepoKey = isChangingVersion(project.version) ? 'plugins-snapshot-local' : 'plugins-release-local'
artifactory {
    publish {
        repository {
            repoKey = publishRepoKey
        }
    }
}

static boolean isChangingVersion(String ver) {
    ver.endsWith('-SNAPSHOT') || ver.endsWith('-next')
}